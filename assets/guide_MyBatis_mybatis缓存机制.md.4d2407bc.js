import{_ as s,o as n,c as a,O as l}from"./chunks/framework.571309da.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"guide/MyBatis/mybatis缓存机制.md","filePath":"guide/MyBatis/mybatis缓存机制.md","lastUpdated":null}'),p={name:"guide/MyBatis/mybatis缓存机制.md"},e=l(`<p><strong>问题导入：</strong></p><ul><li><p>mybatis 缓存分为一级缓存和二级缓存，那这两级缓存是怎么实现的呢？</p></li><li><p>他们的存储结构，作用范围，失效场景是什么？</p></li></ul><p>4.1 缓存是什么？</p><p>缓存存在于内存中的临时数据，访问速度比一般随机存取存储器（RAM）快的一种高速存储器</p><ul><li><p>为什么使用缓存：</p><ul><li><p>减少和数据库交互的次数，提高执行效率</p></li><li><p>什么样的数据能使用缓存，什么样的数据不能使用</p></li></ul></li><li><p>适用于缓存：</p><ul><li><p>经常改变的数据。</p></li><li><p>数据的正确与否对最终结果影响很大的。</p></li><li><p>例如：商品的库存，银行的汇率，股市的牌价</p></li></ul></li></ul><p>4.2 Mybatis中的一级缓存和二级缓存</p><p>​ <strong>一级缓存：</strong></p><ul><li><p>它是mybatis中的sqlSession对象的缓存当我们执行查询之后，查询的结果会同时存入到SqlSession为们提供一块区域中。</p></li><li><p>该区域的结构是一个Map，当我们再次查询同样的数据，Mybatis会先去SqlSession中查询是否有，有的话直接拿出来用。</p></li><li><p>当SqlSession对象消失时，mybatis的一级缓存也就消失了。</p></li></ul><p><img src="https://tcs-devops.aliyuncs.com/storage/112w3befc59ab7f5e4cd1ec126806988e6c6?Signature=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJBcHBJRCI6IjVlNzQ4MmQ2MjE1MjJiZDVjN2Y5YjMzNSIsIl9hcHBJZCI6IjVlNzQ4MmQ2MjE1MjJiZDVjN2Y5YjMzNSIsIl9vcmdhbml6YXRpb25JZCI6IiIsImV4cCI6MTY5MDM4MDM0NiwiaWF0IjoxNjg5Nzc1NTQ2LCJyZXNvdXJjZSI6Ii9zdG9yYWdlLzExMnczYmVmYzU5YWI3ZjVlNGNkMWVjMTI2ODA2OTg4ZTZjNiJ9.wcgl_YhlZrtsJyS_SP64LykDdCmm3NM4zsB-anFvvW4&amp;download=%E5%9B%BE%E7%89%87.png" alt=""></p><p><strong>一级缓存实现方式</strong></p><p>​</p><div class="language-text"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">@Test</span></span>
<span class="line"><span style="color:#A6ACCD;">public void findTest() throws IOException {</span></span>
<span class="line"><span style="color:#A6ACCD;">    //调用utils里面的getsqlSession 包含提交操作</span></span>
<span class="line"><span style="color:#A6ACCD;">    SqlSession session = MybatisUtils.getSqlSession(true);</span></span>
<span class="line"><span style="color:#A6ACCD;">    UserDao mapper = session.getMapper(UserDao.class);</span></span>
<span class="line"><span style="color:#A6ACCD;">    //第一次</span></span>
<span class="line"><span style="color:#A6ACCD;">    System.out.println(&quot;第一次&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;">    List&lt;User&gt; all = mapper.findAll();</span></span>
<span class="line"><span style="color:#A6ACCD;">    System.out.println(all.get(0));</span></span>
<span class="line"><span style="color:#A6ACCD;">    System.out.println(&quot;第二次&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;">    List&lt;User&gt; all2 = mapper.findAll();</span></span>
<span class="line"><span style="color:#A6ACCD;">    System.out.println(all.get(0));</span></span>
<span class="line"><span style="color:#A6ACCD;">​</span></span>
<span class="line"><span style="color:#A6ACCD;">    System.out.println(&quot;比较两个对象是否一样&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;">    System.out.println(all.equals(all2));</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">​</span></span>
<span class="line"><span style="color:#A6ACCD;">    //释放资源</span></span>
<span class="line"><span style="color:#A6ACCD;">    MybatisUtils.closeSqlSession(session);</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><p>查看结果：</p><p><img src="https://tcs-devops.aliyuncs.com/storage/112wf4b111808b0e17f8f8853d760201d391?Signature=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJBcHBJRCI6IjVlNzQ4MmQ2MjE1MjJiZDVjN2Y5YjMzNSIsIl9hcHBJZCI6IjVlNzQ4MmQ2MjE1MjJiZDVjN2Y5YjMzNSIsIl9vcmdhbml6YXRpb25JZCI6IiIsImV4cCI6MTY5MDM4MDM0NiwiaWF0IjoxNjg5Nzc1NTQ2LCJyZXNvdXJjZSI6Ii9zdG9yYWdlLzExMndmNGIxMTE4MDhiMGUxN2Y4Zjg4NTNkNzYwMjAxZDM5MSJ9.cJB6km95yl-0pbHa07dpIc_3D_GGFzsqt7J9sNIujrc&amp;download=%E5%9B%BE%E7%89%87.png" alt=""></p><p>清空缓存的方法：</p><div class="language-text"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">session.clearCache();//此方法也可以清空缓存</span></span></code></pre></div><p><img src="https://tcs-devops.aliyuncs.com/storage/112w3b87e76d7271f075ef7b473d969a716c?Signature=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJBcHBJRCI6IjVlNzQ4MmQ2MjE1MjJiZDVjN2Y5YjMzNSIsIl9hcHBJZCI6IjVlNzQ4MmQ2MjE1MjJiZDVjN2Y5YjMzNSIsIl9vcmdhbml6YXRpb25JZCI6IiIsImV4cCI6MTY5MDM4MDM0NiwiaWF0IjoxNjg5Nzc1NTQ2LCJyZXNvdXJjZSI6Ii9zdG9yYWdlLzExMnczYjg3ZTc2ZDcyNzFmMDc1ZWY3YjQ3M2Q5NjlhNzE2YyJ9.K72XPy3h2W-1TOIOqBaGD0Jqiax6K3fBPqHOVOz_UIg&amp;download=%E5%9B%BE%E7%89%87.png" alt=""></p><p>查看结果：</p><p><img src="https://tcs-devops.aliyuncs.com/storage/112wc2affdcdd2fd98440778497c1f7fb420?Signature=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJBcHBJRCI6IjVlNzQ4MmQ2MjE1MjJiZDVjN2Y5YjMzNSIsIl9hcHBJZCI6IjVlNzQ4MmQ2MjE1MjJiZDVjN2Y5YjMzNSIsIl9vcmdhbml6YXRpb25JZCI6IiIsImV4cCI6MTY5MDM4MDM0NiwiaWF0IjoxNjg5Nzc1NTQ2LCJyZXNvdXJjZSI6Ii9zdG9yYWdlLzExMndjMmFmZmRjZGQyZmQ5ODQ0MDc3ODQ5N2MxZjdmYjQyMCJ9.CIcdBjpYwiOhsfx75lINaAyuEBzHTLDcUbxjq44-9_I&amp;download=%E5%9B%BE%E7%89%87.png" alt=""></p><p>4.3 一级缓存失效场景</p><p>一级缓存是 SqlSession 范围的缓存，当调用 SqlSession 的修改，添加，删除，commit()，close()等方法时，就会清空一级缓存</p><p>代码实例：</p><div class="language-text"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">//第一次</span></span>
<span class="line"><span style="color:#A6ACCD;">System.out.println(&quot;第一次&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;">List&lt;User&gt; all = mapper.findAll();</span></span>
<span class="line"><span style="color:#A6ACCD;">System.out.println(all.get(0));</span></span>
<span class="line"><span style="color:#A6ACCD;">User user=new User();</span></span>
<span class="line"><span style="color:#A6ACCD;">user.setId(3);</span></span>
<span class="line"><span style="color:#A6ACCD;">user.setUsername(&quot;程序员爱什么？&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;">mapper.update(user);</span></span>
<span class="line"><span style="color:#A6ACCD;">​</span></span>
<span class="line"><span style="color:#A6ACCD;">System.out.println(&quot;第二次&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;">List&lt;User&gt; all2 = mapper.findAll();</span></span>
<span class="line"><span style="color:#A6ACCD;">System.out.println(all.get(0));</span></span>
<span class="line"><span style="color:#A6ACCD;">System.out.println(&quot;第三次&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;">List&lt;User&gt; all3 = mapper.findAll();</span></span>
<span class="line"><span style="color:#A6ACCD;">System.out.println(all.get(0));</span></span>
<span class="line"><span style="color:#A6ACCD;">​</span></span>
<span class="line"><span style="color:#A6ACCD;">System.out.println(&quot;比较两个对象是否一样&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;">System.out.println(all.equals(all2));</span></span></code></pre></div><p>运行结果查看：</p><p><img src="https://tcs-devops.aliyuncs.com/storage/112wba5f76de0b8645371d4e39bee287e4ea?Signature=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJBcHBJRCI6IjVlNzQ4MmQ2MjE1MjJiZDVjN2Y5YjMzNSIsIl9hcHBJZCI6IjVlNzQ4MmQ2MjE1MjJiZDVjN2Y5YjMzNSIsIl9vcmdhbml6YXRpb25JZCI6IiIsImV4cCI6MTY5MDM4MDM0NiwiaWF0IjoxNjg5Nzc1NTQ2LCJyZXNvdXJjZSI6Ii9zdG9yYWdlLzExMndiYTVmNzZkZTBiODY0NTM3MWQ0ZTM5YmVlMjg3ZTRlYSJ9.HCHzoAQs-EhnZQmfYOZvvbC0DU48YUbilMGDIfYdlys&amp;download=%E5%9B%BE%E7%89%87.png" alt=""></p><p><strong>测试缓存关闭失效场景：</strong></p><div class="language-text"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">@Test</span></span>
<span class="line"><span style="color:#A6ACCD;">    public void IuserTest() throws IOException {</span></span>
<span class="line"><span style="color:#A6ACCD;">​</span></span>
<span class="line"><span style="color:#A6ACCD;">        //获取sqlsession 对象</span></span>
<span class="line"><span style="color:#A6ACCD;">        System.out.println(&quot;第一次加载&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;">        SqlSession session = MyBatisUtils.getSqlSession(true);</span></span>
<span class="line"><span style="color:#A6ACCD;">        IuserMapper mapper = session.getMapper(IuserMapper.class);</span></span>
<span class="line"><span style="color:#A6ACCD;">        List&lt;User&gt; all = mapper.findAll();</span></span>
<span class="line"><span style="color:#A6ACCD;">        System.out.println(all.get(0));</span></span>
<span class="line"><span style="color:#A6ACCD;">        //在这个位置关闭就会报错</span></span>
<span class="line"><span style="color:#A6ACCD;">       // session.close();</span></span>
<span class="line"><span style="color:#A6ACCD;">​</span></span>
<span class="line"><span style="color:#A6ACCD;">        System.out.println(&quot;第二次加载&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;">        SqlSession session2 = MyBatisUtils.getSqlSession(true);</span></span>
<span class="line"><span style="color:#A6ACCD;">        IuserMapper mapper2 = session.getMapper(IuserMapper.class);</span></span>
<span class="line"><span style="color:#A6ACCD;">        List&lt;User&gt; all2 = mapper2.findAll();</span></span>
<span class="line"><span style="color:#A6ACCD;">        System.out.println(all2.get(0));</span></span>
<span class="line"><span style="color:#A6ACCD;">        User user=new User();</span></span>
<span class="line"><span style="color:#A6ACCD;">        user.setId(13);</span></span>
<span class="line"><span style="color:#A6ACCD;">        user.setUsername(&quot;程序员&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;">        user.setSex(&quot;女&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;">        user.setAddress(&quot;爱代码否？爱money&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;">        user.setBirthday(Date.valueOf(&quot;2023-03-15&quot;));</span></span>
<span class="line"><span style="color:#A6ACCD;">        mapper2.update(user);</span></span>
<span class="line"><span style="color:#A6ACCD;">​</span></span>
<span class="line"><span style="color:#A6ACCD;">        session2.commit();</span></span>
<span class="line"><span style="color:#A6ACCD;">        session2.close();</span></span>
<span class="line"><span style="color:#A6ACCD;">        System.out.println(&quot;第三次加载&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;">        SqlSession session3 = MyBatisUtils.getSqlSession(true);</span></span>
<span class="line"><span style="color:#A6ACCD;">        IuserMapper mapper3 = session.getMapper(IuserMapper.class);</span></span>
<span class="line"><span style="color:#A6ACCD;">        List&lt;User&gt; all3 = mapper3.findAll();</span></span>
<span class="line"><span style="color:#A6ACCD;">        System.out.println(all3.get(0));</span></span>
<span class="line"><span style="color:#A6ACCD;">​</span></span>
<span class="line"><span style="color:#A6ACCD;">        System.out.println(&quot;对象比较&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;">        System.out.println(mapper==mapper2);</span></span>
<span class="line"><span style="color:#A6ACCD;">        System.out.println(mapper2==mapper3);</span></span>
<span class="line"><span style="color:#A6ACCD;">        session3.close();</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">​</span></span></code></pre></div><p><strong>4.4 二级缓存</strong></p><ul><li><p>二级缓存是 mapper 映射级别的缓存，多个 SqlSession 去操作同一个 Mapper 映射的 sql 语句，多个 SqlSession 可以共用二级缓存，二级缓存是跨 SqlSession 的。</p></li><li><p>他指的是SqlSessionFactory对象的缓存。由同一个SqlSessionFactory对象创建的SqlSession共享其缓存</p></li></ul><p><strong>原理解析</strong></p><p>mybatis 二级缓存也是通过PerpetualCache 缓存对象存储的，所以存储结构也是基于HashMap的。 二级缓存是基于mapper文件的namespace 的。也就是说多个SqlSession 可以共享一个mapper 中的二级缓存区域。</p><p><img src="https://tcs-devops.aliyuncs.com/storage/112wd325e63d2ef9e7998b54568949073846?Signature=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJBcHBJRCI6IjVlNzQ4MmQ2MjE1MjJiZDVjN2Y5YjMzNSIsIl9hcHBJZCI6IjVlNzQ4MmQ2MjE1MjJiZDVjN2Y5YjMzNSIsIl9vcmdhbml6YXRpb25JZCI6IiIsImV4cCI6MTY5MDM4MDM0NiwiaWF0IjoxNjg5Nzc1NTQ2LCJyZXNvdXJjZSI6Ii9zdG9yYWdlLzExMndkMzI1ZTYzZDJlZjllNzk5OGI1NDU2ODk0OTA3Mzg0NiJ9.2sptGtNvZZd7fs-aKy_mr2r5N_qAqLOgOpI878pJLAk&amp;download=%E5%9B%BE%E7%89%87.png" alt=""></p><p>一个sqlSession 的会将执行的结果保存到二级缓存区，其他的SqlSession在获取的时候，不会从数据库获取数据，而是从缓存中获取数据。但是最终得到的对象是不相等的，因为二级缓存中缓存的是数据，而不是对象。 当其中有一个SqlSession 执行了事物提交操作，就会清空二级缓存，导致二级缓存失效，其他的SqlSession 想要获取数据，需要从新从数据库取。</p><p><strong>4.4.1 开启二级缓存</strong></p><p><strong>实现步骤：</strong></p><p><strong>第一步：</strong></p><p>在核心配置文件中配置：</p><div class="language-text"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">&lt;configuration&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    &lt;!--引入数据库连接的配置文件--&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    &lt;properties resource=&quot;jdbc.properties&quot;/&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    &lt;!--开启二级缓存--&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    &lt;settings&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        &lt;setting name=&quot;cacheEnabled&quot; value=&quot;true&quot;/&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    &lt;/settings&gt;</span></span></code></pre></div><ul><li><p>cacheEnabled 的取值默认就为 true，所以这一步可以省略不配置。</p><ul><li><p>为 true 代表开启二级缓存；</p></li><li><p>为 false 代表不开启二级缓存。</p></li></ul></li></ul><p><strong>第二步 mapper配置文件：</strong></p><div class="language-text"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">&lt;cache eviction=&quot;FIFO&quot; flushInterval=&quot;60000&quot; size=&quot;5120&quot; readOnly=&quot;true&quot; /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">&lt;select id=&quot;findAll&quot; resultType=&quot;user&quot; useCache=&quot;true&quot;&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        select * from T_user</span></span>
<span class="line"><span style="color:#A6ACCD;">    &lt;/select&gt;</span></span></code></pre></div><p>映射文件中的<code>&lt;select&gt;</code>标签中设置 useCache=”true”代表当前这个 select要使用二级缓存，如果不使用二级缓存可以设置为 false。</p><p>**注意：**针对每次查询都需要最新的数据 sql，要设置成 useCache=false，禁用二级缓存。</p><p>使用缓存的时候，最好给实体类序列化一下：<strong>implements Serializable</strong></p><p><strong>测试代码：</strong></p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Test</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">findcahe</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> throws IOException </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">//调用utils里面的getsqlSession 包含提交操作</span></span>
<span class="line"><span style="color:#A6ACCD;">​</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">SqlSession</span><span style="color:#A6ACCD;"> session1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> MybatisUtils</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getSqlSession</span><span style="color:#89DDFF;">(true);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">UserDao</span><span style="color:#A6ACCD;"> mapper1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> session1</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getMapper</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">UserDao</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">SqlSession</span><span style="color:#A6ACCD;"> session2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> MybatisUtils</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getSqlSession</span><span style="color:#89DDFF;">(true);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">UserDao</span><span style="color:#A6ACCD;"> mapper2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> session2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getMapper</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">UserDao</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">class</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">//第一次</span></span>
<span class="line"><span style="color:#A6ACCD;">    System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">第一次</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">List</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">User</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> user1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> mapper1</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">findAll</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">user1</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#A6ACCD;">    session1</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">close</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">​</span></span>
<span class="line"><span style="color:#A6ACCD;">    System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">第二次</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">List</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">User</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> user2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> mapper2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">findAll</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">    System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">user2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#A6ACCD;">    session2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">close</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">​</span></span>
<span class="line"><span style="color:#A6ACCD;">    System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">比较两个对象是否一样</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">测试是否相等</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">+(</span><span style="color:#A6ACCD;">user2</span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;">user1</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#A6ACCD;">​</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>结果展示：</p><p><img src="https://tcs-devops.aliyuncs.com/storage/112w2df829a9abbd15f46f87d8cde7fabb15?Signature=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJBcHBJRCI6IjVlNzQ4MmQ2MjE1MjJiZDVjN2Y5YjMzNSIsIl9hcHBJZCI6IjVlNzQ4MmQ2MjE1MjJiZDVjN2Y5YjMzNSIsIl9vcmdhbml6YXRpb25JZCI6IiIsImV4cCI6MTY5MDM4MDM0NiwiaWF0IjoxNjg5Nzc1NTQ2LCJyZXNvdXJjZSI6Ii9zdG9yYWdlLzExMncyZGY4MjlhOWFiYmQxNWY0NmY4N2Q4Y2RlN2ZhYmIxNSJ9.Wb8q93TvF90wob8Mp2CY6fk3ms_U1OhYhd7N7jhzSJQ&amp;download=%E5%9B%BE%E7%89%87.png" alt=""></p><p>注解的使用方式：</p><div class="language-text"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">@CacheNamespace(eviction = FifoCache.class, flushInterval = 60000, size = 1024, readWrite = true)</span></span>
<span class="line"><span style="color:#A6ACCD;">    @Select(&quot;select * from T_user&quot;) @Options(useCache = true)</span></span>
<span class="line"><span style="color:#A6ACCD;">    public List&lt;User&gt; findAll();</span></span></code></pre></div>`,50),o=[e];function t(c,r,i,C,y,A){return n(),a("div",null,o)}const F=s(p,[["render",t]]);export{u as __pageData,F as default};
