import{_ as s,o as n,c as l,O as a}from"./chunks/framework.571309da.js";const A=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"guide/SpringMVC/SpringMVC教程.md","filePath":"guide/SpringMVC/SpringMVC教程.md","lastUpdated":1688557990000}'),p={name:"guide/SpringMVC/SpringMVC教程.md"},o=a(`<blockquote><p>Spring MVC属于SpringFrameWork的后续产品，已经融合在Spring Web Flow里面。Spring 框架提供了构建 Web 应用程序的全功能 MVC 模块。使用 Spring 可插入的 MVC 架构，从而在使用Spring进行WEB开发时，可以选择使用Spring的Spring MVC框架或集成其他MVC开发框架，如Struts1(现在一般不用)，Struts 2(一般老项目使用)等。</p></blockquote><p><img src="https://tcs-devops.aliyuncs.com/storage/112v48ffbe3493ad1d7091e31583553087f1?Signature=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJBcHBJRCI6IjVlNzQ4MmQ2MjE1MjJiZDVjN2Y5YjMzNSIsIl9hcHBJZCI6IjVlNzQ4MmQ2MjE1MjJiZDVjN2Y5YjMzNSIsIl9vcmdhbml6YXRpb25JZCI6IiIsImV4cCI6MTY4OTE2MTI3NCwiaWF0IjoxNjg4NTU2NDc0LCJyZXNvdXJjZSI6Ii9zdG9yYWdlLzExMnY0OGZmYmUzNDkzYWQxZDcwOTFlMzE1ODM1NTMwODdmMSJ9.IDyA7l79w-J6lYdQIc9lvOxB4NIm2NI-9M1yYYmYWEs&amp;download=%E5%9B%BE%E7%89%87.png" alt=""></p><h2 id="一、springmvc基础入门" tabindex="-1">一、SpringMVC基础入门 <a class="header-anchor" href="#一、springmvc基础入门" aria-label="Permalink to &quot;一、SpringMVC基础入门&quot;">​</a></h2><p>V即View视图是指用户看到并与之交互的界面。比如由html元素组成的网页界面，或者软件的客户端界面。MVC的好处之一在于它能为应用程序处理很多不同的视图。在视图中其实没有真正的处理发生，它只是作为一种输出数据并允许用户操作的方式。</p><p>M即model模型是指模型表示业务规则。在MVC的三个部件中，模型拥有最多的处理任务。被模型返回的数据是中立的，模型与数据格式无关，这样一个模型能为多个视图提供数据，由于应用于模型的代码只需写一次就可以被多个视图重用，所以减少了代码的重复性。</p><p>C即controller控制器是指控制器接受用户的输入并调用模型和视图去完成用户的需求，控制器本身不输出任何东西和做任何处理。它只是接收请求并决定调用哪个模型构件去处理请求，然后再确定用哪个视图来显示返回的数据。</p><h3 id="_1-1-概述" tabindex="-1">1.1 概述 <a class="header-anchor" href="#_1-1-概述" aria-label="Permalink to &quot;1.1 概述&quot;">​</a></h3><p><strong>Spring MVC</strong>框架是一个开源的Java平台，为开发强大的基于Java的Web应用程序提供全面的基础架构支持非常容易和非常快速。</p><p>Spring框架最初由<strong>Rod Johnson</strong>撰写，并于2003年6月根据<strong>Apache 2.0</strong>许可证首次发布。</p><p><strong>Spring web MVC</strong>框架提供了MVC(模型 - 视图 - 控制器)架构和用于开发灵活和松散耦合的Web应用程序的组件。 <strong>MVC</strong>模式导致应用程序的不同方面(输入逻辑，业务逻辑和UI逻辑)分离，同时提供这些元素之间的松散耦合。</p><p><strong>模型</strong>(Model)封装了应用程序数据，通常它们将由POJO类组成。</p><p><strong>视图</strong>(View)负责渲染模型数据，一般来说它生成客户端浏览器可以解释HTML输出。(jsp、freemarker、thymeleaf for html5)</p><p><strong>控制器</strong>(Controller)负责处理用户请求并构建适当的模型，并将其传递给视图进行渲染。</p><p>Spring MVC 是一个模型 - 视图 - 控制器（MVC）的Web框架建立在中央前端控制器servlet（DispatcherServlet），它负责发送每个请求到合适的处理程序，使用视图来最终返回响应结果的概念。Spring MVC 是 Spring 产品组合的一部分，它享有 Spring IoC容器紧密结合Spring松耦合等特点，因此它有Spring的所有优点。</p><h3 id="_1-2-springmvc执行流程" tabindex="-1">1.2 springmvc执行流程 <a class="header-anchor" href="#_1-2-springmvc执行流程" aria-label="Permalink to &quot;1.2 springmvc执行流程&quot;">​</a></h3><p><img src="https://tcs-devops.aliyuncs.com/storage/112vfec940c76b6ef8edb0f5d6f834e7692c?Signature=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJBcHBJRCI6IjVlNzQ4MmQ2MjE1MjJiZDVjN2Y5YjMzNSIsIl9hcHBJZCI6IjVlNzQ4MmQ2MjE1MjJiZDVjN2Y5YjMzNSIsIl9vcmdhbml6YXRpb25JZCI6IiIsImV4cCI6MTY4OTE2MTI3NCwiaWF0IjoxNjg4NTU2NDc0LCJyZXNvdXJjZSI6Ii9zdG9yYWdlLzExMnZmZWM5NDBjNzZiNmVmOGVkYjBmNWQ2ZjgzNGU3NjkyYyJ9.68n_XAkR26QWe9BK2XGmQa3m5YRLOLjjL7kMS8AdXR0&amp;download=%E5%9B%BE%E7%89%87.png" alt=""></p><p><img src="https://tcs-devops.aliyuncs.com/storage/112vd5253df65ea261b9d94d8eb5519b8f5f?Signature=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJBcHBJRCI6IjVlNzQ4MmQ2MjE1MjJiZDVjN2Y5YjMzNSIsIl9hcHBJZCI6IjVlNzQ4MmQ2MjE1MjJiZDVjN2Y5YjMzNSIsIl9vcmdhbml6YXRpb25JZCI6IiIsImV4cCI6MTY4OTE2MTI3NCwiaWF0IjoxNjg4NTU2NDc0LCJyZXNvdXJjZSI6Ii9zdG9yYWdlLzExMnZkNTI1M2RmNjVlYTI2MWI5ZDk0ZDhlYjU1MTliOGY1ZiJ9.OTfg0XTXsDSvId2nXMxilDx3XDFm5BKjnDL5CYdRKs8&amp;download=%E5%9B%BE%E7%89%87.png" alt=""></p><h3 id="springmvc快速入门" tabindex="-1">SpringMVC快速入门 <a class="header-anchor" href="#springmvc快速入门" aria-label="Permalink to &quot;SpringMVC快速入门&quot;">​</a></h3><p>需求：客户端发起请求，服务器端接收请求，执行逻辑并进行视图跳转。</p><p><strong>开发步骤</strong></p><p>①导入SpringMVC相关坐标</p><p>②配置SpringMVC核心控制器DispathcerServlet</p><p>③创建Controller类和视图页面</p><p>④使用注解配置Controller类中业务方法的映射地址</p><p>⑤配置SpringMVC核心文件 spring-mvc.xml</p><p>⑥客户端发起请求测试</p><p><strong>1 导入SpringMVC相关坐标</strong></p><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">dependency</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">groupId</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">org.springframework</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">groupId</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">artifactId</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">spring-webmvc</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">artifactId</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">version</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">5.3.20</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">version</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">dependency</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!--json转换--&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">dependency</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">groupId</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">com.fasterxml.jackson.core</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">groupId</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">artifactId</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">jackson-databind</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">artifactId</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">version</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">2.12.3</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">version</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">dependency</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">dependency</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">groupId</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">org.projectlombok</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">groupId</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">artifactId</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">lombok</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">artifactId</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">version</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">1.18.26</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">version</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">dependency</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">dependency</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">groupId</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">javax.servlet</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">groupId</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">artifactId</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">javax.servlet-api</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">artifactId</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">version</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">4.0.1</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">version</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">scope</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">provided</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">scope</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">dependency</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">dependency</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">groupId</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">javax.servlet.jsp</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">groupId</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">artifactId</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">jsp-api</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">artifactId</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">version</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">2.2</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">version</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">scope</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">provided</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">scope</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">dependency</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">dependency</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">groupId</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">javax.servlet</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">groupId</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">artifactId</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">jstl</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">artifactId</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">version</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">1.2</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">version</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">dependency</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>2 在web.xml中配置核心控制器DispathcerServlet</p><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">servlet</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">servlet-name</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">smvc</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">servlet-name</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">servlet-class</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">org.springframework.web.servlet.DispatcherServlet</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">servlet-class</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">init-param</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">param-name</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">contextConfigLocation</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">param-name</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">param-value</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">classpath:springmvc.xml</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">param-value</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">init-param</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">servlet</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">servlet-mapping</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">servlet-name</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">smvc</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">servlet-name</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">url-pattern</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">/</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">url-pattern</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">servlet-mapping</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- 配置web项目的web.xml文件的首页 --&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">welcome-file-list</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">welcome-file</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">index.html</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">welcome-file</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">welcome-file</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">index.jsp</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">welcome-file</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">welcome-file-list</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>3 定义表现层业务处理器Controller，并配置成spring的bean（等同于Servlet）</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Controller</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">HelloController</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">RequestMapping</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">hello</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#A6ACCD;">        System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">out</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello word</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">index.jsp</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>4 配置SpringMVC核心文件 spring-mvc.xml</p><p><strong>第一种方式：</strong></p><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;?</span><span style="color:#F07178;">xml</span><span style="color:#C792EA;"> version</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1.0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;"> encoding</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">UTF-8</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">?&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">beans</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">xmlns</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://www.springframework.org/schema/beans</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">       </span><span style="color:#C792EA;">xmlns</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">xsi</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://www.w3.org/2001/XMLSchema-instance</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">       </span><span style="color:#C792EA;">xmlns</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">context</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://www.springframework.org/schema/context</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">       </span><span style="color:#C792EA;">xsi</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">schemaLocation</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">&lt;!--包扫描--&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">context</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">component-scan</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">base-package</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">com.by</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">context</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;">component-scan</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">​</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">beans</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p><strong>第二种方式：</strong></p><p>不使用注解模式，手写配置</p><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">&lt;!--需要继承controller 里面实现了header--&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">bean</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/hello2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">com.by.controller.HelloController2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">/&gt;</span></span></code></pre></div><p>controller编写逻辑：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">HelloController2</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">implements</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Controller</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;"> </span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;"> </span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;"> </span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;"> @Override</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;"> </span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;"> public</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ModelAndView</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">handleRequest</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">HttpServletRequest</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">request,</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">HttpServletResponse</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">response</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">throws</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Exception</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">{</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;"> </span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;"> </span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;"> </span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;"> ModelAndView</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mv=new</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ModelAndView</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;"> </span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;"> </span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;"> </span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;"> mv.setViewName</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">&quot;/WEB-INF/success.jsp&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;"> </span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;"> </span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;"> </span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;"> //mv.setViewName</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">&quot;hello&quot;</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">如果xml统一配置路径，可以简写程文件名</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;"> </span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;"> </span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;"> </span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;"> mv.addObject</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">&quot;msg&quot;</span><span style="color:#FFCB6B;">,</span><span style="color:#FFCB6B;">&quot;今天天气很冷&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;"> </span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;"> </span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;"> </span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;"> return</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mv</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;"> </span><span style="color:#A6ACCD;">  </span><span style="color:#C3E88D;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><p>结果显示：</p><p><img src="https://tcs-devops.aliyuncs.com/storage/112v1242a365cf4126698b623e00bf8c31cf?Signature=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJBcHBJRCI6IjVlNzQ4MmQ2MjE1MjJiZDVjN2Y5YjMzNSIsIl9hcHBJZCI6IjVlNzQ4MmQ2MjE1MjJiZDVjN2Y5YjMzNSIsIl9vcmdhbml6YXRpb25JZCI6IiIsImV4cCI6MTY4OTE2MTI3NCwiaWF0IjoxNjg4NTU2NDc0LCJyZXNvdXJjZSI6Ii9zdG9yYWdlLzExMnYxMjQyYTM2NWNmNDEyNjY5OGI2MjNlMDBiZjhjMzFjZiJ9.s3Ef9TNvkbRh6JPLXQrbMSHPr3GY9UD-BLaSug3l0ww&amp;download=%E5%9B%BE%E7%89%87.png" alt=""></p><p>快速入门二</p><p>需求：通过访问地址调转到指定的页面中</p><p><strong>开发步骤</strong></p><p>①创建Controller类和视图页面</p><p>②配置SpringMVC核心控制器DispathcerServlet</p><p>④使用注解配置Controller类中业务方法的映射地址</p><p>⑤配置SpringMVC核心文件 spring-mvc.xml</p><p>⑥客户端发起请求测试</p><h3 id="_1-3-springmvc-success操作" tabindex="-1">1.3 Springmvc success操作 <a class="header-anchor" href="#_1-3-springmvc-success操作" aria-label="Permalink to &quot;1.3 Springmvc success操作&quot;">​</a></h3><p>方案一 web.xml + spring-mvc.xml</p><ol><li>建立配置 <strong>spring-mvc.xml</strong></li></ol><div class="language-scheme"><button title="Copy Code" class="copy"></button><span class="lang">scheme</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">&lt;?xml version=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1.0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> encoding=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">UTF-8</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">?&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">&lt;beans xmlns=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://www.springframework.org/schema/beans</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> xmlns:xsi=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://www.w3.org/2001/XMLSchema-instance</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> xmlns:context=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://www.springframework.org/schema/context</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> xmlns:mvc=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://www.springframework.org/schema/mvc</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">       xsi:schemaLocation=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://www.springframework.org/schema/beans   http://www.springframework.org/schema/beans/spring-beans.xsd   http://www.springframework.org/schema/context   http://www.springframework.org/schema/context/spring-context.xsd   http://www.springframework.org/schema/mvc   http://www.springframework.org/schema/mvc/spring-mvc.xsd</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">&gt;    </span></span>
<span class="line"><span style="color:#A6ACCD;">    &lt;!--配置视图解析器--&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    &lt;bean class=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">org.springframework.web.servlet.view.InternalResourceViewResolver</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">         &lt;!-- 设置逻辑视图名的前缀 --&gt;  </span></span>
<span class="line"><span style="color:#A6ACCD;">        &lt;property name=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">prefix</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> value=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/WEB-INF/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">&gt;&lt;/property&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        &lt;!-- 设置逻辑视图名的后缀 --&gt; </span></span>
<span class="line"><span style="color:#A6ACCD;">        &lt;property name=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">suffix</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> value=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">.jsp</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">&gt;&lt;/property&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    &lt;/bean&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">&lt;!-- 配置Handler --&gt;  </span></span>
<span class="line"><span style="color:#A6ACCD;">&lt;bean name=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/hello2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> class=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">com.by.controller.HelloController2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">/&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">&lt;bean name=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/hello3</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> class=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">com.by.controller.HelloController2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">/&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">&lt;/beans&gt;</span></span></code></pre></div><ol><li>编写controller实例</li></ol><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">HelloWord2</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">implements</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Controller</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">ModelAndView</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">handleRequest</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">HttpServletRequest</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">httpServletRequest</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">HttpServletResponse</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">httpServletResponse</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">throws</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">Exception</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">ModelAndView</span><span style="color:#A6ACCD;"> mv</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;font-style:italic;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ModelAndView</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        mv</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setViewName</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">success</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//mv.setViewName(&quot;hello&quot;); 如果xml统一配置路径，可以简写程文件名</span></span>
<span class="line"><span style="color:#A6ACCD;">        mv</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addObject</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">msg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">今天天气很冷</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> mv</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><ol><li>构建页面 <strong>success页面</strong></li></ol><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">html</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">head</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">title</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">Title</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">title</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">head</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">h2</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">测试成功，欢迎来到这里</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">h2</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">h2</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">页面接收参数:\${msg}</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">h2</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">html</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h3 id="_1-4-入门案例工作流程分析" tabindex="-1">1.4 入门案例工作流程分析 <a class="header-anchor" href="#_1-4-入门案例工作流程分析" aria-label="Permalink to &quot;1.4 入门案例工作流程分析&quot;">​</a></h3><ul><li><p>服务器启动</p><ul><li><p>加载web.xml中DispatcherServlet</p></li><li><p>读取spring-mvc.xml中的配置，加载所有com.by包中所有标记为bean的类</p></li><li><p>读取bean中方法上方标注@RequestMapping的内容</p></li></ul></li><li><p>处理请求</p><ul><li><p>DispatcherServlet配置拦截所有请求 /</p></li><li><p>使用请求路径与所有加载的@RequestMapping的内容进行比对</p></li><li><p>执行对应的方法</p></li><li><p>根据方法的返回值在webapp目录中查找对应的页面并展示</p></li></ul></li></ul><p>1.4.1 SpringMVC 技术架构图</p><p><img src="https://tcs-devops.aliyuncs.com/storage/112v5615d3debae25cecfe4a594b3726d963?Signature=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJBcHBJRCI6IjVlNzQ4MmQ2MjE1MjJiZDVjN2Y5YjMzNSIsIl9hcHBJZCI6IjVlNzQ4MmQ2MjE1MjJiZDVjN2Y5YjMzNSIsIl9vcmdhbml6YXRpb25JZCI6IiIsImV4cCI6MTY4OTE2MTI3NCwiaWF0IjoxNjg4NTU2NDc0LCJyZXNvdXJjZSI6Ii9zdG9yYWdlLzExMnY1NjE1ZDNkZWJhZTI1Y2VjZmU0YTU5NGIzNzI2ZDk2MyJ9.0EpdIMRSUt8BByxP9q89yNCk65iUvq7DCsiMPNIMw3M&amp;download=%E5%9B%BE%E7%89%87.png" alt=""></p><p>1.4.2 前端控制器</p><blockquote><p>Spring Web 模型-视图-控制（MVC）框架是围绕 <strong><strong>DispatcherServlet</strong></strong> 设计的，DispatcherServlet是整个流程控制的中心，由它调用其它组件处理用户的请求和响应，，DispatcherServlet的存在降低了组件之间的耦合性。Spring Web MVC <em><strong>DispatcherServlet</strong></em> 的请求处理的<strong><strong>工作流程</strong></strong>如下图所示：</p></blockquote><p><img src="https://tcs-devops.aliyuncs.com/storage/112v3f615484418eb020008bbf0db4030e82?Signature=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJBcHBJRCI6IjVlNzQ4MmQ2MjE1MjJiZDVjN2Y5YjMzNSIsIl9hcHBJZCI6IjVlNzQ4MmQ2MjE1MjJiZDVjN2Y5YjMzNSIsIl9vcmdhbml6YXRpb25JZCI6IiIsImV4cCI6MTY4OTE2MTI3NCwiaWF0IjoxNjg4NTU2NDc0LCJyZXNvdXJjZSI6Ii9zdG9yYWdlLzExMnYzZjYxNTQ4NDQxOGViMDIwMDA4YmJmMGRiNDAzMGU4MiJ9.sN3Y1ZJfnNKtv-DVYtDv3Wb9gOH7qff9QVaAB39qmHA&amp;download=%E5%9B%BE%E7%89%87.png" alt=""></p><p>​</p><p><img src="https://tcs-devops.aliyuncs.com/storage/112vb6f61deb715164d7d583df052f70cc4c?Signature=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJBcHBJRCI6IjVlNzQ4MmQ2MjE1MjJiZDVjN2Y5YjMzNSIsIl9hcHBJZCI6IjVlNzQ4MmQ2MjE1MjJiZDVjN2Y5YjMzNSIsIl9vcmdhbml6YXRpb25JZCI6IiIsImV4cCI6MTY4OTE2MTI3NCwiaWF0IjoxNjg4NTU2NDc0LCJyZXNvdXJjZSI6Ii9zdG9yYWdlLzExMnZiNmY2MWRlYjcxNTE2NGQ3ZDU4M2RmMDUyZjcwY2M0YyJ9.VJvF6qV1gBbCqrobqtFaLAt4SEku2-ixb6SMpGtpje0&amp;download=%E5%9B%BE%E7%89%87.png" alt=""></p><h3 id="_1-5-具体流程" tabindex="-1">1.5 具体流程 <a class="header-anchor" href="#_1-5-具体流程" aria-label="Permalink to &quot;1.5 具体流程&quot;">​</a></h3><ul><li><p>第一步：发起请求到前端控制器(DispatcherServlet)</p></li><li><p>第二步：前端控制器请求处理器映射器HandlerMapping查找 Handler （可以根据xml配置、注解进行查找）</p></li><li><p>第三步：处理器映射器<strong>HandlerMapping</strong>向前端控制器返回<strong>Handler，HandlerMapping</strong>会把请求映射为一个<em><strong>执行链(HandlerExecutionChain</strong></em>)对象（包含一个Handler处理器（页面控制器）对象，多个<strong>HandlerInterceptor</strong>拦截器对象），通过这种策略模式，很容易添加新的映射策略</p></li><li><p>第四步：前端控制器调用处理器适配器去执行Handler</p></li><li><p>第五步：处理器适配器<strong>HandlerAdapter</strong>将会根据适配的结果去执行<strong>Handler</strong></p></li><li><p>第六步：Handler执行完成给适配器返回<strong>ModelAndView</strong></p></li><li><p>第七步：处理器适配器向前端控制器返回<strong>ModelAndView</strong> （<strong>ModelAndView</strong>是springmvc框架的一个底层对象，包括 Model和view）</p></li><li><p>第八步：前端控制器请求视图解析器去进行视图解析 （根据逻辑视图名解析成真正的视图(jsp)），通过这种策略很容易更换其他视图技术，只需要更改视图解析器即可</p></li><li><p>第九步：视图解析器向前端控制器返回View</p></li><li><p>第十步：前端控制器进行视图渲染 （视图渲染将模型数据(在ModelAndView对象中)填充到request域）</p></li><li><p>第十一步：前端控制器向用户响应结果</p></li></ul><h3 id="_1-6-总结流程" tabindex="-1">1.6 总结流程 <a class="header-anchor" href="#_1-6-总结流程" aria-label="Permalink to &quot;1.6 总结流程&quot;">​</a></h3><ol><li><p>Spring MVC所有的请求都经过DispatcherServlet来统一分发。</p></li><li><p>需要借助HandlerMapping定位到具体的Controller,然后将请求转发到对应的Controller映射。</p></li><li><p>Controller接口将处理用户请求，这和Java Servlet扮演的角色是一致的。一旦Controller处理完用户请求，则返回ModelAndView(数据和视图)对象给DispatcherServlet前端控制器。</p></li></ol><p><strong>从宏观角度考虑</strong>：DispatcherServlet是整个Web应用的控制器；<strong>带头大哥</strong></p><p><strong>从微观考虑：</strong> Controller小弟是单个Http请求处理过程中的控制器，而ModelAndView是Http请求过程中返回的模型（Model）和视图（View）。返回的视图需要通过ViewResolver接口（视图解析器）在Web应用中负责查找View对象，从从而将相应结果渲染给客户。</p>`,73),t=[o];function e(r,c,D,y,F,C){return n(),l("div",null,t)}const g=s(p,[["render",e]]);export{A as __pageData,g as default};
